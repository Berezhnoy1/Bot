from typing import List
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from config import ui_config

class Keyboard:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    
    @staticmethod
    def create_reply_keyboard(buttons: List[str], row_width: int = 2, resize: bool = True, one_time: bool = True) -> ReplyKeyboardMarkup:
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        markup = ReplyKeyboardMarkup(resize_keyboard=resize, one_time_keyboard=one_time, row_width=row_width)
        markup.add(*buttons)
        return markup
    
    @staticmethod
    def create_inline_keyboard(buttons: List[dict], row_width: int = 2) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        markup = InlineKeyboardMarkup(row_width=row_width)
        for button in buttons:
            markup.add(InlineKeyboardButton(
                text=button['text'],
                callback_data=button.get('callback_data', ''),
                url=button.get('url', None)
            ))
        return markup

    @staticmethod
    def get_phone_keyboard() -> ReplyKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        button = KeyboardButton("üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)
        keyboard.add(button)
        return keyboard

class MainMenuKeyboard(Keyboard):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    
    @classmethod
    def get_keyboard(cls) -> ReplyKeyboardMarkup:
        buttons = [
            f"{ui_config.EMOJIS['level']} –î—ñ–∑–Ω–∞—Ç–∏—Å—è —Ä—ñ–≤–µ–Ω—å –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó",
            f"{ui_config.EMOJIS['money']} –ö—É–ø–∏—Ç–∏ –∫—É—Ä—Å",
            f"{ui_config.EMOJIS['calendar']} –ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫",
            f"{ui_config.EMOJIS['phone']} –ó–≤'—è–∑–∞—Ç–∏—Å—å –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"
        ]
        return cls.create_reply_keyboard(buttons, row_width=1)

class LevelSelectionKeyboard(Keyboard):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è"""
    
    @classmethod
    def get_keyboard(cls) -> ReplyKeyboardMarkup:
        buttons = [
            f"A1 (–ü–æ—á–∞—Ç–∫–æ–≤–∏–π) {ui_config.EMOJIS['level']}", 
            f"A2 (–ï–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∏–π) {ui_config.EMOJIS['level']}",
            f"B1 (–°–µ—Ä–µ–¥–Ω—ñ–π) {ui_config.EMOJIS['level']}", 
            f"B2+ (–í–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ) {ui_config.EMOJIS['level']}",
            f"C1 (–ü—Ä–æ—Å—É–Ω—É—Ç–∏–π) {ui_config.EMOJIS['level']}", 
            f"C2 (–í—ñ–ª—å–Ω–µ –≤–æ–ª–æ–¥—ñ–Ω–Ω—è) {ui_config.EMOJIS['level']}",
            f"{ui_config.EMOJIS['test']} –î—ñ–∑–Ω–∞—Ç–∏—Å—è —Ä—ñ–≤–µ–Ω—å –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó"
        ]
        return cls.create_reply_keyboard(buttons, row_width=2)

class TestKeyboard(Keyboard):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    @classmethod
    def get_answer_keyboard(cls, answers: List[str]) -> ReplyKeyboardMarkup:
        return cls.create_reply_keyboard(answers, row_width=1)

class SurveyKeyboard(Keyboard):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ–ø—Ä–æ—Å–∞"""
    
    @staticmethod
    def get_motivation_keyboard() -> ReplyKeyboardMarkup:
        buttons = ["1", "2", "3", "4", "5"]
        return Keyboard.create_reply_keyboard(buttons)
    
    @staticmethod
    def get_time_keyboard() -> ReplyKeyboardMarkup:
        buttons = ["1-2 –≥–æ–¥–∏–Ω–∏", "3-4 –≥–æ–¥–∏–Ω–∏", "5-7 –≥–æ–¥–∏–Ω"]
        return Keyboard.create_reply_keyboard(buttons)
    
    @staticmethod
    def get_budget_keyboard() -> ReplyKeyboardMarkup:
        buttons = [
            "100-300 –≥—Ä–Ω",
            "300-500 –≥—Ä–Ω",
            "500-700 –≥—Ä–Ω",
            "–Ø –ø–æ–∫–∏ –Ω–µ –∑–Ω–∞—é, —Ö–æ—á—É —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—è"
        ]
        return Keyboard.create_reply_keyboard(buttons)
    
    @staticmethod
    def get_goal_keyboard() -> ReplyKeyboardMarkup:
        buttons = [
            "–î–ª—è —Ä–æ–±–æ—Ç–∏",
            "–î–ª—è –ø–æ–¥–æ—Ä–æ–∂–µ–π",
            "–î–ª—è –ø–µ—Ä–µ—ó–∑–¥—É",
            "–î–ª—è –Ω–∞–≤—á–∞–Ω–Ω—è",
            "–î–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É –æ—Å–æ–±–∏—Å—Ç–∏—Ö –Ω–∞–≤–∏—á–æ–∫",
            "–Ü–Ω—à–µ"
        ]
        return Keyboard.create_reply_keyboard(buttons, row_width=2)
    
    @staticmethod
    def get_start_preference_keyboard() -> ReplyKeyboardMarkup:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add("–•–æ—á—É –ø–æ—á–∞—Ç–∏ –≤—ñ–¥—Ä–∞–∑—É")
        keyboard.add("–°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±–Ω–µ –∑–∞–Ω—è—Ç—Ç—è")
        return keyboard
    
    @staticmethod
    def get_payment_keyboard() -> ReplyKeyboardMarkup:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add("–û–ø–ª–∞—Ç–∞ –æ–¥—Ä–∞–∑—É –∑–∞ –∫—É—Ä—Å")
        keyboard.add("–û–ø–ª–∞—Ç–∞ —á–∞—Å—Ç–∏–Ω–∞–º–∏")
        keyboard.add("–û–ø–ª–∞—Ç–∞ –∑–∞ –∫–æ–∂–Ω–µ –∑–∞–Ω—è—Ç—Ç—è")
        return keyboard
    
    @staticmethod
    def get_start_choice_keyboard() -> ReplyKeyboardMarkup:
        buttons = [
            "–¢–∞–∫, —è –≥–æ—Ç–æ–≤–∏–π —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è –Ω–µ–≥–∞–π–Ω–æ",
            "–ù—ñ, —Ö–æ—á—É —Å–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–±–Ω–µ –∑–∞–Ω—è—Ç—Ç—è"
        ]
        return Keyboard.create_reply_keyboard(buttons)
    
    @staticmethod
    def get_ninth_question_keyboard() -> ReplyKeyboardMarkup:
        buttons = [
            "–¢–∞–∫, –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞",
            "–ù—ñ, —è –≤–ø–µ–≤–Ω–µ–Ω–∏–π —É —Å–≤–æ—ó—Ö –∑–Ω–∞–Ω–Ω—è—Ö"
        ]
        return Keyboard.create_reply_keyboard(buttons)
